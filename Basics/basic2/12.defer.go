/*
Defer
https://go-tour-jp.appspot.com/flowcontrol/12

関数の終了時まで遅延され、関数の最後で確実に実行されます。
リソース管理やエラーハンドリングなどのコードの簡潔さと保守性を向上させる

リソースの解放: ファイルのクローズやネットワーク接続の解放など、リソースの解放処理を defer ステートメントで実行することで、関数の終了時に確実に行うことができます。
ロックの解除: defer ステートメントを使用してロックの解除処理を遅延させることで、関数内でのロックの取得と解放の対応を容易にします。
遅延エラーチェック: 関数の途中でエラーが発生した場合でも、defer ステートメントを使用してエラーチェックやログ出力を遅延させることで、関数の終了前に必要な処理を行うことができます。

実行コマンド
go run Basics/Basic2/12.defer.go
*/
package main

import "fmt"

func main() {
	defer fmt.Println("world")
	fmt.Println("hello")
}
